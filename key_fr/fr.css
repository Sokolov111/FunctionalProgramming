/* Анимации - animation */


/* Всплывающйи header */


/* Уберем  отступы*/

body {
    margin: 0;
    padding: 0;
}

.solid {
    /* Зададим размер и цвет */
    width: 100%;
    height: 250px;
    background-color: rgb(92, 167, 157);
    /* подчеркивание снизу */
    border-bottom: 15px solid #000;
    /* Уберем header на задний экран */
    position: absolute;
    top: -250px;
    /* После время */
    /* Чтобы все было плавно */
    transition: top 1s ease-in-out;
    animation: render 2s ease-in-out;
}


/* 
normal — анимация проигрывается в обычном направлении, 
с начала и до конца.
reverse — анимация проигрывается в обратном направлении,
 то есть с конца.
alternate — анимация проигрывается с начала и до конца,
 а затем в обратном направлении.
alternate-reverse — анимация проигрывается с конца до начала,
 а затем в обратном направлении.
*/

.solid:hover::before {
    /* Обратно чтобы появлялся header */
    top: 0;
    /* Время */
    animation-play-state: paused;
}


/* Расположение p */

.solid p {
    text-align: center;
    margin: 100px;
}


/* Пробуем сами keyFR */

@keyframes render {
    /* На нуле ничего не происходит */
    0% {
        /* Цвет такой же */
        background-color: rgb(92, 167, 157);
    }
    50% {
        background-color: rgba(187, 187, 187, 0.603);
    }
    100% {
        background-color: rgb(92, 167, 157);
    }
}


/* Квадраты */

.box {
    width: 250px;
    height: 250px;
    background-color: rgb(197, 64, 64);
    position: relative;
    top: 0;
    left: 0;
    animation: key_render 4s infinite;
}

@keyframes key_render {
    0% {
        top: 0;
        left: 0;
        background-color: rgb(197, 64, 64);
    }
    25% {
        top: 0;
        left: 300px;
        background-color: rgb(64, 155, 197);
        border-radius: 50%;
    }
    50% {
        top: 500px;
        left: 300px;
        background-color: rgb(75, 197, 64);
        border-radius: 0%;
    }
    75% {
        top: 500px;
        left: 0;
        background-color: rgb(195, 197, 64);
        border-radius: 50%;
    }
}

.key {
    /* width: ; */
    position: relative;
    height: 200px;
    background-color: #000;
    width: 100px;
    /* animation: kfkey 4s infinite;
    animation-direction: alternate; */
    animation-name: kfkey;
    animation-duration: 4s;
    animation-iteration-count: infinite;
    /* animation-direction: alternate; */
}


/* 
animation-name — задает имя анимации;
animation-duration — задает длительность анимации в секундах (s) или миллисекундах (ms);
animation-timing-function — задает скоростные значения анимации;
animation-iteration-count — задает количество повторений анимации;
animation-direction — задает направление анимации;
animation-play-state — задает состояние анимации при наведении курсора;
animation-delay — задает время задержки перед началом анимации в s и ms;
animation-fill-mode — задаем положение элемента до и после анимации.
*/


/* движение */


/* animation-direction: normal | reverse | alternate | alternate-reverse; */

@keyframes kfkey {
    0% {
        left: 0;
    }
    100% {
        left: 100%;
    }
}